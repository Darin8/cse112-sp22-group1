name: Front-end Build

on:
  push:
    branches:
      - back-end_drop
      - front-end_drop
      - ci/cd-pipeline-1
      - pipeline-test
      - pipeline2.0
      - front-end
      - back-end
      - dev-ops

  pull_request:
    branches:
      - main
      - back-end_drop
      - front-end_drop
      - front-end
      - back-end
      - dev-ops

jobs:
  front-end-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: "Current_Prod"
      run:  |
            ORIGINALPROD=""
            for file in ./prod/dist/*; do
              if  [ -d $file ]; then
                for subdict in $file/*; do
                  for element in $subdict/*; do
                    ORIGINALPROD="${ORIGINALPROD}${element##*/}"
                  done
                done
              else
                if [[ $file == *.css ]] || [[ $file == *.html ]]
                then
                  NEWFILE=$(cat ${file} | tr '\n' ' ')
                  ORIGINALPROD="${ORIGINALPROD}${NEWFILE}"
                else
                  ORIGINALPROD="${ORIGINALPROD}${file##*/}"
                fi
              fi
            done
            echo "::set-output name=ORIGINALPROD::$ORIGINALPROD"
      working-directory: ./src/front-end
    - run: npm install
      working-directory: ./src/front-end
    - run: npm run build
      working-directory: ./src/front-end
    - name: "Testing_Prod"
      run:  |
            NEWPROD=""
            for file in ./prod/dist/*; do
              if  [ -d $file ]; then
                for subdict in $file/*; do
                  for element in $subdict/*; do
                    NEWPROD="${NEWPROD}${element##*/}"
                  done
                done
              else
                if [[ $file == *.css ]] || [[ $file == *.html ]]
                then
                  NEWFILE=$(cat ${file} | tr '\n' ' ')
                  NEWPROD="${NEWPROD}${NEWFILE}"
                else
                  NEWPROD="${NEWPROD}${file##*/}"
                fi
              fi
            done
            echo "::set-output name=NEWPROD::$NEWPROD"
      working-directory: ./src/front-end
    - name: Checking application was built
      if: ${{ steps.Curent_Prod.outputs.ORIGINALPROD != steps.Testing_Prod.outputs.NEWPROD }}
      run:  |
            echo You need to build before pushing
            exit 1